/* 


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

4 million - 4000000

*/

var fibSumEvenHalf= function(exceed_not) {

	var sumHalf = 0;

	var prev = 0;
	var cur = 1;


	for(var i = 2; ; i++) {

		var temp = prev + cur;

		if(temp > exceed_not) {
			break;
		}

		if(temp % 2 === 0) {
			sumHalf += temp;
		}
		prev = cur;
		cur = temp;
	}

	return sumHalf;


}


//Find n fib number


var fibN = function(n) {


	if(n === 0 || n === 1) {
		return n;
	}

	return fibN(n - 1) + fibN(n - 2);


}

var findN_dp = function(n) {

	var fib_arr = [];

	fib_arr[0] = 0;
	fib_arr[1] = 1;



	for(var i = 2; i <= n; i++) {

		fib_arr[i] = fib_arr[i - 1] + fib_arr[i - 2];
	}

	return fib_arr[n];



}


var fibN_dp_spaceoptimized = function(n) {

	var prev = 0;
	var cur = 1;


	for(var i = 2; i <= n; i++) {
		var temp = prev + cur;
		prev = cur;
		cur = temp;
	}

	return temp;

}


// Tests for fib series 
console.log("fibN for 9: ", fibN(9));
console.log("findN_dp for 9: ", findN_dp(9));
console.log("fibN_dp_spaceoptimized for 9: ", fibN_dp_spaceoptimized(9));
console.log("fibSumEvenHalf for max 4 million", fibSumEvenHalf(4000000));










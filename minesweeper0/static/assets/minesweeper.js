eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"minesweeper/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"minesweeper/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=minesweeper/app.js");

;eval("define(\"minesweeper/controllers/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n      queryParams: [\'height\', \'width\', \'count\'],\n      needs: [\'tileRows\'],\n      height: 10,\n      width: 20,\n      count: 10,\n      revealedBombs: 0,\n      gameState: \'running\',\n      faceClass: function() {\n        if (this.get(\'failure\')) {\n          return \"fa fa-frown-o\";\n        } else {\n          return \"fa fa-smile-o\";\n        }\n      }.property(\'failure\'),\n      failure: Ember.computed.alias(\'controllers.tileRows.failure\'),\n\n      actions: {\n        revealAll: function() {\n          this.get(\'controllers.tileRows\').forEach(function(row) {\n            row.forEach(function(tile) {\n              tile.send(\'reveal\');\n            });\n          });\n        },\n        reset: function() {\n          var controller = this;\n          Ember.$.ajax({\n            type: \'POST\',\n            url: \'/init\',\n            data: {\n              height: controller.get(\'height\'),\n              width: controller.get(\'width\'),\n              count: controller.get(\'count\')\n            }\n          }).then(function(data) {\n            controller.set(\'gameState\', \'running\');\n            controller.set(\'model\', data);\n            var width = controller.get(\'width\');\n            var height = controller.get(\'height\');\n\n            var Tile = Ember.Object.extend({\n              bomb: function() {\n                return controller.get(\'count\') === -1;\n              }.property(\'count\')\n            });\n\n            var tile_rows = [];\n            for (var row = 0; row < height; row++) {\n              var cols = [];\n              for (var col = 0; col < width; col++) {\n                cols.push(Tile.create({\n                  x: col,\n                  y: row,\n                  revealed: false,\n                  count: null\n                }));\n              }\n              tile_rows.push(cols);\n            }\n\n            controller.set(\'controllers.tileRows.model\', tile_rows);\n            controller.set(\'controllers.tileRows.failure\', false);\n          });\n        }\n      }\n    });\n  });//# sourceURL=minesweeper/controllers/index.js");

;eval("define(\"minesweeper/controllers/tile\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n      needs: [\'tileRows\'],\n      bomb: false,\n      actions: {\n        reveal: function() {\n          var controller = this;\n          if (!this.get(\'revealed\')) {\n            Ember.$.ajax({\n              type: \'POST\',\n              url: \'/reveal\',\n              dataType: \'json\',\n              data: {\n                x: controller.get(\'x\'),\n                y: controller.get(\'y\')\n              }\n            }).then(function(data) {\n              var cells = data.cells;\n              var rows = controller.get(\'controllers.tileRows\');\n              rows.forEach(function(row) {\n                row.forEach(function(col) {\n                  cells.forEach(function(cell) {\n                    if (cell.x === col.get(\'x\') && cell.y === col.get(\'y\')) {\n                      col.set(\'revealed\', true);\n                      if (cell.count !== 0) {\n                        if (cell.count === -1) {\n                          col.set(\'count\', Ember.String.htmlSafe(\'<i class=\"fa fa-bomb\"></i>\'));\n                          controller.set(\'controllers.tileRows.failure\', true);\n                        } else {\n                          col.set(\'count\', cell.count);\n                        }\n                      }\n                    }\n                  });\n                });\n              });\n            }).fail(function() {\n              controller.transitionToRoute(\'error\');\n            });\n          }\n        }\n      }\n    });\n  });//# sourceURL=minesweeper/controllers/tile.js");

;eval("define(\"minesweeper/controllers/tile_rows\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n      itemController: \'tiles\',\n      failure: false\n    });\n  });//# sourceURL=minesweeper/controllers/tile_rows.js");

;eval("define(\"minesweeper/controllers/tiles\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n      itemController: \'tile\'\n    });\n  });//# sourceURL=minesweeper/controllers/tiles.js");

;eval("define(\"minesweeper/initializers/export-application-global\", \n  [\"ember\",\"minesweeper/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize() {\n      var application = arguments[1] || arguments[0];\n      if (config.exportApplicationGlobal !== false) {\n        var value = config.exportApplicationGlobal;\n        var globalName;\n\n        if (typeof value === \'string\') {\n          globalName = value;\n        } else {\n          globalName = Ember.String.classify(config.modulePrefix);\n        }\n\n        if (!window[globalName]) {\n          window[globalName] = application;\n\n          application.reopen({\n            willDestroy: function() {\n              this._super.apply(this, arguments);\n              delete window[globalName];\n            }\n          });\n        }\n      }\n    }\n\n    __exports__.initialize = initialize;__exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=minesweeper/initializers/export-application-global.js");

;eval("define(\"minesweeper/router\", \n  [\"ember\",\"minesweeper/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType,\n      rootURL: \'/ui/\'\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=minesweeper/router.js");

;eval("define(\"minesweeper/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Route.extend({\n      queryParams: [\'height\', \'width\', \'count\'],\n      height: 10,\n      width: 20,\n      count: 10,\n      model: function() {\n        return Ember.$.ajax({\n          type: \'POST\',\n          url: \'/init\',\n          data: {\n            height: this.get(\'height\'),\n            width: this.get(\'width\'),\n            count: this.get(\'count\')\n          }\n        });\n      },\n\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        var width = this.get(\'width\');\n        var height = this.get(\'height\');\n\n        var Tile = Ember.Object.extend({\n          bomb: function() {\n            return this.get(\'count\') === -1;\n          }.property(\'count\')\n        });\n\n        var tile_rows = [];\n        for (var row = 0; row < height; row++) {\n          var cols = [];\n          for (var col = 0; col < width; col++) {\n            cols.push(Tile.create({\n              x: col,\n              y: row,\n              revealed: false,\n              count: null\n            }));\n          }\n          tile_rows.push(cols);\n        }\n\n        controller.set(\'controllers.tileRows.model\', tile_rows);\n      }\n    });\n  });//# sourceURL=minesweeper/routes/index.js");

;eval("define(\"minesweeper/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2>Minesweeper</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=minesweeper/templates/application.js");

;eval("define(\"minesweeper/templates/error\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"fallDownMan\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=minesweeper/templates/error.js");

;eval("define(\"minesweeper/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <div class=\\\"tile-row\\\">\\n      \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n  \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"tile\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2 id=\'title\'><span class=\\\"total-bombs\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"count\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span><span class=\\\"mine-face\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"revealAll\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><i \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"faceClass\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></i></span><span class=\\\"revealed-bombs\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"revealedBombs\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span></h2>\\n\\n<div class=\\\"panel\\\">\\n  \");\n      stack1 = helpers.each.call(depth0, \"controllers.tileRows\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<div class=\\\"reset\\\">\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"reset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Reset!</button>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=minesweeper/templates/index.js");

;eval("define(\"minesweeper/templates/tile\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"tile-content\\\">\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"count\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=minesweeper/templates/tile.js");

;eval("define(\"minesweeper/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/app.jshint.js");

;eval("define(\"minesweeper/tests/controllers/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/index.js should pass jshint\', function() { \n      ok(true, \'controllers/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/controllers/index.jshint.js");

;eval("define(\"minesweeper/tests/controllers/tile.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/tile.js should pass jshint\', function() { \n      ok(true, \'controllers/tile.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/controllers/tile.jshint.js");

;eval("define(\"minesweeper/tests/controllers/tile_rows.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/tile_rows.js should pass jshint\', function() { \n      ok(true, \'controllers/tile_rows.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/controllers/tile_rows.jshint.js");

;eval("define(\"minesweeper/tests/controllers/tiles.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/tiles.js should pass jshint\', function() { \n      ok(true, \'controllers/tiles.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/controllers/tiles.jshint.js");

;eval("define(\"minesweeper/tests/helpers/resolver\", \n  [\"ember/resolver\",\"minesweeper/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=minesweeper/tests/helpers/resolver.js");

;eval("define(\"minesweeper/tests/helpers/start-app\", \n  [\"ember\",\"minesweeper/app\",\"minesweeper/router\",\"minesweeper/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=minesweeper/tests/helpers/start-app.js");

;eval("define(\"minesweeper/tests/minesweeper/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - minesweeper/tests/helpers\');\n    test(\'minesweeper/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'minesweeper/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/minesweeper/tests/helpers/resolver.jshint.js");

;eval("define(\"minesweeper/tests/minesweeper/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - minesweeper/tests/helpers\');\n    test(\'minesweeper/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'minesweeper/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/minesweeper/tests/helpers/start-app.jshint.js");

;eval("define(\"minesweeper/tests/minesweeper/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - minesweeper/tests\');\n    test(\'minesweeper/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'minesweeper/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/minesweeper/tests/test-helper.jshint.js");

;eval("define(\"minesweeper/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/router.jshint.js");

;eval("define(\"minesweeper/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/index.js should pass jshint\', function() { \n      ok(true, \'routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/routes/index.jshint.js");

;eval("define(\"minesweeper/tests/test-helper\", \n  [\"minesweeper/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=minesweeper/tests/test-helper.js");

;eval("define(\"minesweeper/tests/views/error.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/error.js should pass jshint\', function() { \n      ok(false, \'views/error.js should pass jshint.\\nviews/error.js: line 43, col 21, \\\'Raphael\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=minesweeper/tests/views/error.jshint.js");

;eval("define(\"minesweeper/tests/views/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/index.js should pass jshint\', function() { \n      ok(true, \'views/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/views/index.jshint.js");

;eval("define(\"minesweeper/tests/views/tile.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/tile.js should pass jshint\', function() { \n      ok(true, \'views/tile.js should pass jshint.\'); \n    });\n  });//# sourceURL=minesweeper/tests/views/tile.jshint.js");

;eval("define(\"minesweeper/views/error\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    function fall_down_svg() {\n      return [{\n        type: \"path\",\n        fill: \"#777\",\n        stroke: \"#777\",\n        path: \"M43.688,12.481c1.297-4.331-1.131-8.905-5.473-10.228c-4.318-1.337-8.905,1.091-10.242,5.435 c-1.323,4.343,1.131,8.917,5.449,10.241C37.765,19.266,42.352,16.824,43.688,12.481\"\n      }, {\n        type: \"path\",\n        fill: \"#777\",\n        stroke: \"#777\",\n        path: \"M59.042,37.706l-3.107-19.199L74.938,7.393c0.901-0.502,1.606-1.311,1.903-2.339 c0.604-2.082-0.578-4.267-2.66-4.896c-1.105-0.321-2.262-0.141-3.187,0.438L43.907,16.502c-0.951,0.501-1.773,1.208-2.479,2.031 l-11.424,15.33l-15.729-1.876c-1.002,0.347-1.862,1.105-2.312,2.133c-0.874,2.004,0.052,4.317,2.031,5.166 c0.834,0.384,1.734,0.436,2.569,0.205l16.011,1.812c0.579-0.231,1.105-0.579,1.529-1.054l6.501-8.16l3.11,17.617 c0.578,2.481,2.236,4.665,4.587,5.847l13.954,4.163l2.056,16.036c0.258,1.812,1.518,3.417,3.342,4.073 c2.66,0.95,5.577-0.463,6.503-3.123c0.295-0.796,0.347-1.671,0.231-2.479l-2.52-19.622c-0.295-1.438-1.194-2.71-2.531-3.469 l-8.688-2.609l14.38-8.712l17.579,7.787c0.114,0.051,0.218,0.103,0.32,0.154c2.66,0.925,5.576-0.462,6.503-3.123 c0.873-2.506-0.31-5.217-2.66-6.322l-20.033-8.93c-0.103-0.026-0.166-0.078-0.27-0.103c-1.439-0.501-2.969-0.321-4.188,0.347 L59.042,37.706z\"\n      }, {\n        type: \"path\",\n        fill: \"#777\",\n        stroke: \"#777\",\n        path: \"M21.047,44.862H0v5.744h16.203v16.346h16.846v15.226H49.38V100h21.485v-5.744H55.137V76.434H38.793V61.194 h-16.82V44.862H21.047z\"\n      }];\n    }\n\n    __exports__[\"default\"] = Ember.View.extend({\n      didInsertElement: function() {\n        var paper_add = function(paper, elements) {\n          var set = paper.set();\n          for (var i = 0; i < elements.length; i++) {\n            var item = elements[i];\n            set.push(paper[item.type]().attr(item));\n          }\n          return set;\n        };\n\n        var container = this.$();\n        if (container.length === 0) {\n          return;\n        }\n\n        var outer = container.find(\'.loading_outer\');\n        var middle = container.find(\'.loading_middle\');\n        middle.css(\'left\', outer.width()/2 - middle.width()/2 + \'px\');\n        middle.css(\'top\', outer.height()/2 - middle.height()/2 + \'px\');\n\n        var paper = new Raphael(container.find(\'div.loading_svg\')[0]);\n        paper_add(paper, fall_down_svg());\n\n        container.find(\".loading_message\").html(\'Whoops! Please try again later.\');\n        container.find(\".loading_middle\").css(\"opacity\", 1);\n      },\n      classNames: [\'normalLoading\'],\n      template: Ember.Handlebars.compile(\'<div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12 col-md-12\"><div class=\"loading_outer\"><div class=\"loading_middle\"><div class=\"loading_svg\"></div><div class=\"loading_message\"></div></div></div></div></div></div>\')\n    });\n  });//# sourceURL=minesweeper/views/error.js");

;eval("define(\"minesweeper/views/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // Copyright (c) 2014, RetailNext, Inc.\n    // This material contains trade secrets and confidential information of\n    // RetailNext, Inc.  Any use, reproduction, disclosure or dissemination\n    // is strictly prohibited without the explicit written permission\n    // of RetailNext, Inc.\n    // All rights reserved.\n\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      didInsertElement: function() {\n        var view = this;\n        Ember.$(window).on(\'keypress\', function(event) {\n          if (event.keyCode === 63246) {\n            view.controller.get(\'controllers.tileRows\').forEach(function(row) {\n              row.forEach(function(tile) {\n                tile.send(\'reveal\');\n              });\n            });\n          }\n        });\n      }\n    });\n  });//# sourceURL=minesweeper/views/index.js");

;eval("define(\"minesweeper/views/tile\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      templateName: \'tile\',\n      classNames: [\'tile\'],\n      classNameBindings: [\'controller.model.revealed:tile-revealed\'],\n      click: function() {\n        this.get(\'controller\').send(\'reveal\');\n      }\n    });\n  });//# sourceURL=minesweeper/views/tile.js");

/* jshint ignore:start */

define('minesweeper/config/environment', ['ember'], function(Ember) {
  var prefix = 'minesweeper';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('minesweeper/tests/test-helper');
} else {
  require('minesweeper/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
